<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <packaging>jar</packaging>
    <groupId>com.vaadin</groupId>
    <artifactId>base-starter-connect</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>Vaadin Connect Starter</name>
    <description>Vaadin Connect Starter</description>
    <url>http://vaadin.com</url>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.0.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <repositories>
        <repository>
            <id>vaadin-snapshots</id>
            <url>
                https://oss.sonatype.org/content/repositories/vaadin-snapshots/
            </url>
        </repository>
        <repository>
            <id>vaadin-prereleases</id>
            <url>
                http://maven.vaadin.com/vaadin-prereleases
            </url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>vaadin-snapshots</id>
            <url>
                https://oss.sonatype.org/content/repositories/vaadin-snapshots/
            </url>
        </pluginRepository>
        <pluginRepository>
            <id>vaadin-prereleases</id>
            <url>
                http://maven.vaadin.com/vaadin-prereleases
            </url>
        </pluginRepository>
    </pluginRepositories>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8
        </project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <vaadin.connect.version>0.1.1</vaadin.connect.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-connect</artifactId>
            <version>${vaadin.connect.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security.oauth.boot</groupId>
            <artifactId>spring-security-oauth2-autoconfigure</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-connect-maven-plugin</artifactId>
                <version>${vaadin.connect.version}</version>
                <executions>
                    <execution>
                        <!--Steps for generating Vaadin Connect helpers for the application-->
                        <id>vaadin-connect-resources</id>
                        <goals>
                            <!--Generates Open Api v3 spec-->
                            <goal>generate-openapi-spec</goal>
                            <!--generates the default Vaadin Connect client for sending requests to Vaadin Connect services-->
                            <goal>generate-vaadin-client</goal>
                            <!--Generate Vaadin Connect services' modules to ease their method access-->
                            <goal>generate-connect-modules</goal>
                        </goals>
                    </execution>
                </executions>
                <!--
                    Here are the configurable parameters with their default values:

                    * The target file for the open api spec to be generated to
                    <openApiJsonFile>${project.build.directory}/generated-resources/openapi.json</openApiJsonFile>

                    * The target directory for the client and modules javascript files generated by the plugin
                    <generatedFrontendDirectory>${project.basedir}/frontend/src/generated/</generatedFrontendDirectory>

                    * The properties file to read the Vaadin Connect properties from, defaults will be used when no file provided
                    <applicationProperties>${project.basedir}/src/main/resources/application.properties</applicationProperties>

                    Include them with the overridden values into the <configuration> section of the plugin
                -->
            </plugin>

            <!-- Start spring-boot before running frontend integration tests and stop after that -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>start-backend-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-backend-server</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Run frontend tests -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>install-frontend-deps</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>npm</executable>
                            <arguments>
                                <argument>install</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>run-frontend-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>npm</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>test:frontend</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
